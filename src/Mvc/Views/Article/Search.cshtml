@model Otter.Models.ArticleSearchModel
@{
  ViewBag.Title = string.Format(Model.IsTagSearch ? (string.IsNullOrEmpty(Model.Query) ? "Untagged articles" : "Articles tagged \"{0}\"") : "Search results for \"{0}\"", Model.Query);
}
<h1 class="title">@ViewBag.Title</h1>
@if (Model.Tags.Any())
{
  <h2>Tags:</h2>
  <ul class="tags">
    @foreach (var tag in Model.Tags)
    {
      <li>@Html.ActionLink(tag, "Tagged", new { id = tag })</li>
    }
  </ul>
}
@if (Model.Articles.Any())
{
  <h2>@Model.Articles.Count() article(s) returned:</h2>
  <ul class="search-results-articles">
    @foreach (var article in Model.Articles)
    {
      <li>
        @Html.ActionLink(article.Title, "Read", new { id = article.UrlTitle }, new { @class = "search-result-title" })
        <span class="search-result-details">@string.Format("Last updated {0:g}{1}", article.UpdatedDtm, string.IsNullOrEmpty(article.UpdatedBy) ? string.Empty : " by " + article.UpdatedByDisplayName ?? article.UpdatedBy)</span></li>
    }
  </ul>
}
else
{
  <p>No matching articles could be found.</p>
}