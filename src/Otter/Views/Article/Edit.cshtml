@model Otter.Models.ArticleEditModel
@{
  ViewBag.Title = Model.IsNewArticle ? "Create new article" : Model.Title;
  string maxAttachmentUploadBytes = Html.FileSize(Convert.ToInt64(int.Parse(System.Configuration.ConfigurationManager.AppSettings["otter:MaxAttachmentUploadBytes"])));
}
<h1>@ViewBag.Title</h1>
@using (Html.BeginForm(Model.IsNewArticle ? "Create" : "Edit", "Article", FormMethod.Post, new { id = "edit-form", role = "form" }))
{
  <div class="form-group">
    @Html.LabelFor(m => m.Title):
    @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.Title)
  </div>
  <div class="form-group">
    <label for="Text">Edit the article text using @Html.ActionLink("Markdown syntax", "Read", new { id = "markdown-syntax-help" }):</label>
    @if (Model.IsNewArticle)
    {
      <span class="text-info">(Images can be added by editing the article after it has been created initially.)</span>
    }
    @Html.TextAreaFor(m => m.Text, new { @class = "form-control otter-monospace", rows = 10 })
    @Html.ValidationMessageFor(m => m.Text)
  </div>
  if (!Model.IsNewArticle)
  {
    <p><a target="OtterImages" href="@Url.Action("Images", new { id = @Model.UrlTitle })" class="btn btn-default"><span class="glyphicon glyphicon-picture"></span>&nbsp;Article images (@Model.ImageCount)</a></p>
  }
  <label>Preview:</label>
  <div id="Preview">
  </div>
  if (!Model.IsNewArticle)
  {
    <div><label>Attachments:</label></div>
    <div id="otter-attachments">
      @{ Html.RenderPartial("Attachments", Model.Attachments, new ViewDataDictionary { { "edit", true } });}
    </div>
    <div style="margin: 1em 0"><button type="button" class="btn btn-default btn-sm" data-toggle="modal" data-target="#otter-modal-upload-attachment"><span class="glyphicon glyphicon-paperclip"></span>&nbsp;Add attachment</button></div>
  }
  @Html.EditorFor(m => m.Security)
  @Html.ValidationMessageFor(m => m.Security)
  <div class="form-group">
    @Html.LabelFor(m => m.Tags):
    @Html.TextBoxFor(m => m.Tags, new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.Tags)
  </div>
  if (!Model.IsNewArticle)
  {
    <div class="form-group">
      @Html.LabelFor(m => m.Comment):
      @Html.TextBoxFor(m => m.Comment, new { @class = "form-control" })
      @Html.ValidationMessageFor(m => m.Comment)
    </div>
    @Html.HiddenFor(m => m.ArticleId)
    @Html.HiddenFor(m => m.UpdatedBy)
    @Html.HiddenFor(m => m.UpdatedDtm)
    @Html.HiddenFor(m => m.Revision)
    @Html.HiddenFor(m => m.UrlTitle)
    @Html.HiddenFor(m => m.ImageCount)
  }
  <button type="submit" value="" class="btn btn-primary">@(Model.IsNewArticle ? "Save" : "Save changes")</button>
  if (Model.IsNewArticle)
  {
    @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
  }
  else
  {
    @Html.ActionLink("Cancel", "Read", new { id = Model.UrlTitle }, new { @class = "btn btn-default" })
  }
}
@if (!Model.IsNewArticle)
{
  <div id="otter-modal-upload-attachment" class="modal fade">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
          <h4 class="modal-title">Upload new attachment</h4>
        </div>
        <div class="modal-body">
          @using (Html.BeginForm("UploadAttachment", null, FormMethod.Post, new { id = "otter-upload-attachment-form", enctype = "multipart/form-data" }))
          {
            @Html.HiddenFor(m => m.ArticleId)
            <div class="form-group">
              <label for="UploadFile">Select file to attach:</label>
              <input type="file" class="form-control" id="UploadFile" name="UploadFile" data-val="true" data-val-required="Please select a file to attach." />
              @Html.ValidationMessage("UploadFile")
            </div>
            <div class="form-group">
              <label for="UploadTitle">Attachment title:</label>
              @Html.TextBox("UploadTitle", null, new { @class = "form-control", data_val = "true", data_val_required = "Please enter a title for the attachment." })
              @Html.ValidationMessage("UploadTitle")
            </div>
          }
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" onclick="$('#otter-upload-attachment-form').submit()">Save</button>
        </div>
      </div>
    </div>
  </div>
}
@section head
{
  <style type="text/css">
    .loading {
      background-color: #aaa;
      filter: alpha(opacity=50);
      -moz-opacity: 0.5;
      -khtml-opacity: 0.5;
      opacity: 0.5;
    }

    #Preview {
      border: 2px dashed #ccc;
      padding: 5px;
      height: 250px;
      overflow-y: scroll;
      margin-bottom: 1em;
    }
  </style>
}
@section scripts
  {
  <script type="text/javascript" src="@Url.Content("~/Scripts/content-format.js")"></script>
  <script type="text/javascript">

    var requestId = 0;

    var loadPreview = function () {
      $.ajax({
        url: '@Url.Action("Preview")',
        type: 'POST',
        data: {
          'id': requestId,
          'text': $("#Text").val(),
          'articleId': @Html.Raw(HttpUtility.JavaScriptStringEncode(Model.UrlTitle, true))
          },
        success: function (data) {
          if (data.id == requestId) {
            $('#Preview').html(data.html);
            applyContentFormat($('#Preview'));
            $('#Preview').removeClass('loading');
          }
        },
        dataType: 'json'
      });
    }

    var setDirtyForm = function (dirty) {
      if (dirty) {
        window.onbeforeunload = function (e) {
          return "You have unsaved changes to the article. Are you sure you want to leave without saving?";
        }
      } else {
        window.onbeforeunload = null;
      }
    }

    var dirtyHandler = function () {
      setDirtyForm(true);
      $('#edit-form :input').unbind("change", dirtyHandler);
    }

    $(document).ready(function () {

      $('#edit-form').submit(function () {
        setDirtyForm(false);
        if ($('#Comment').length > 0 && $('#Comment').val().length == 0 && !confirm('Are you sure you wish to submit your changes without specifying a reason for the change?')) {
          return false;
        }
      });

      $("#otter-upload-attachment-form").submit(function(e) {
        e.preventDefault();
        $form = $(this);
        var isValid = $form.validate().form();
        if (isValid)
        {
          $("#otter-modal-upload-attachment button").prop("disabled", true);
          var formData = new FormData(this);
          $.ajax({
            url: "@Url.Action("UploadAttachment")",
            type: "POST",
            dataType: "html",
            data: formData,
            contentType: false,
            processData: false
          }).done(function(r) {
            $("#otter-attachments").html(r);
            $("#otter-modal-upload-attachment").modal("hide");
            $("#UploadFile").val("");
            $("#UploadTitle").val("");
          }).fail(function() {
            var validator = $form.validate();
            validator.showErrors({
              "UploadFile": "There was a problem uploading the attachment. Verify that the attachment exists and is not more than " + @Html.Raw(HttpUtility.JavaScriptStringEncode(maxAttachmentUploadBytes, true)) + "."
            });
          }).always(function() {
            $("#otter-modal-upload-attachment button").prop("disabled", false);
          });
        }
      });

    $("#otter-attachments").on("click", ".otter-attachment-delete", function () {
      var attachmentId = $(this).data("attachmentid");
      if (attachmentId && confirm("Are you sure you wish to delete this attachment?"))
      {
        $.ajax({
          url: "@Url.Action("DeleteAttachment")",
          type: "POST",
          dataType: "html",
          data: { "id": attachmentId }
        }).done(function(r) {
          $("#otter-attachments").html(r);
        });
      }
    });

    $("#Text").bind("input propertychange", function (evt) {

      if (window.event && event.type == "propertychange" && event.propertyName != "value") {
        return;
      }

      window.clearTimeout($(this).data("timeout"));
      $('#Preview').addClass('loading');
      requestId = new Date().getTime();

      $(this).data("timeout", setTimeout(loadPreview, 1000));
    });

    loadPreview();

    $('#edit-form :input').bind("change", dirtyHandler);

    });
  </script>
}