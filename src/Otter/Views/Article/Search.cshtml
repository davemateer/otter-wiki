@model Otter.Models.ArticleSearchModel
@{
  ViewBag.Title = string.Format(Model.IsTagSearch ? (string.IsNullOrEmpty(Model.Query) ? "Untagged articles" : "Articles tagged \"{0}\"") : "Search results for \"{0}\"", Model.Query);
}
<h1>@ViewBag.Title</h1>
@if (Model.Tags.Any())
{
  <p class="search-summary">@string.Format("{0} tag{1}", Model.Tags.Count(), Model.Tags.Count() == 1 ? string.Empty : "s")</p>
  <div class="tags" style="margin: 0 0 2em 0">
    @foreach (var tag in Model.Tags)
    {
      <span class="label label-default">@Html.ActionLink(tag, "Tagged", new { id = tag })</span>
    }
  </div>
}
@if (Model.Articles.Any())
{
  <p class="search-summary">@string.Format("{0} article{1}", Model.Articles.Count(), Model.Articles.Count() == 1 ? string.Empty : "s")</p>
  <ul class="list-unstyled">
    @foreach (var article in Model.Articles)
    {
      <li>
        <p class="search-result-title">@Html.ActionLink(article.Title, "Read", new { id = article.UrlTitle }, new { @class = "" })</p>
        @if (!string.IsNullOrEmpty(article.FragmentHtml))
        {
          <p class="search-result-fragment">@Html.Raw(article.FragmentHtml)</p>
        }
        <p class="search-result-details">@string.Format("Last updated {0:d}{1}", article.UpdatedWhen, string.IsNullOrEmpty(article.UpdatedBy) ? string.Empty : " by " + article.UpdatedByDisplayName ?? article.UpdatedBy)</p>
      </li>
    }
  </ul>
}
else
{
  <p class="lead">No matching articles could be found.</p>
}